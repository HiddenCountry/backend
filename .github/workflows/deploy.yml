name: Build & Deploy (JAR → EC2)

on:
  push:
    branches: [ "chore/#9_cicd" ]   # 배포 트리거 브랜치

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      # (옵션) Gradle 캐시로 빌드 속도 ↑
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Grant Gradle wrapper permissions
        run: chmod +x ./gradlew

      - name: Build (skip tests for speed)
        run: ./gradlew clean bootJar -x test --no-daemon

      - name: Find built JAR
        id: jar
        run: |
          JAR_PATH=$(ls -1 build/libs/*.jar | head -n1)
          echo "jar=$JAR_PATH" >> $GITHUB_OUTPUT
          echo "Found JAR: $JAR_PATH"

      # === EC2로 파일 복사 (SCP) ===
      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: ${{ steps.jar.outputs.jar }}
          target: /srv/hiddencountry/
          overwrite: true

      # === EC2에서 심볼릭 링크 갱신 + 서비스 재시작 + 헬스체크 ===
      - name: Restart service on EC2
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            APP_DIR="/srv/hiddencountry"
            SVC="hiddencountry"

            cd "$APP_DIR"

            # 가장 최근 업로드된 JAR 경로
            NEW_JAR="$(ls -1t *.jar | head -n1)"

            # 이전 링크 백업(선택)
            if [ -L app.jar ]; then
              PREV_TARGET=$(readlink app.jar || true)
              if [ -n "$PREV_TARGET" ] && [ -f "$PREV_TARGET" ]; then
                cp -f "$PREV_TARGET" "app.jar.prev.$(date +%Y%m%d%H%M%S).jar"
              fi
            fi

            # 새 JAR로 링크 교체
            ln -sfn "$NEW_JAR" app.jar

            # 서비스 재시작
            sudo systemctl daemon-reload
            sudo systemctl restart "$SVC"

            # 헬스체크 (Actuator 권장)
            for i in {1..30}; do
              sleep 2
              if curl -fsS http://127.0.0.1:8080/actuator/health | grep -q '"status":"UP"'; then
                echo "Health OK"
                exit 0
              fi
            done

            echo "Health check failed. Rolling back..."
            # 롤백: 가장 최근 prev 파일을 다시 링크
            PREV=$(ls -1t app.jar.prev.*.jar 2>/dev/null | head -n1 || true)
            if [ -n "$PREV" ]; then
              ln -sfn "$PREV" app.jar
              sudo systemctl restart "$SVC"
              exit 1
            else
              echo "No prev jar to roll back."
              exit 1
            fi
