name: Build & Deploy (JAR → EC2)

on:
  push:
    branches: [ "chore/#9_cicd" ]   # 배포 트리거 브랜치

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Gradle (cache)
        uses: gradle/actions/setup-gradle@v3

      - name: Grant Gradle wrapper permissions
        run: chmod +x ./gradlew

      - name: Build (skip tests for speed)
        run: ./gradlew clean bootJar -x test --no-daemon

      # === EC2로 파일 복사 (SCP) ===
      # build/libs/*.jar 를 그대로 /srv/hiddencountry/ 바로 아래에 복사
      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: build/libs/*.jar
          target: /srv/hiddencountry/
          overwrite: true

      # === EC2에서 심볼릭 링크 갱신 + 서비스 재시작 + 헬스체크 ===
      - name: Restart service on EC2
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            APP_DIR="/srv/hiddencountry"
            SVC="hiddencountry"

            # 안전: 디렉토리/툴 확인
            sudo apt-get update -y && sudo apt-get install -y curl || true
            mkdir -p "$APP_DIR"
            cd "$APP_DIR"

            # 최신 JAR 찾아보기 (루트에 바로 있다고 가정)
            NEW_JAR="$(ls -1t *.jar 2>/dev/null | head -n1 || true)"
            if [ -z "$NEW_JAR" ]; then
              # 혹시 하위 경로에 있으면 찾아서 꺼내오기 (백업 플랜)
              NEW_JAR_PATH=$(find "$APP_DIR" -type f -name "*.jar" -printf "%T@ %p\n" 2>/dev/null | sort -nr | head -n1 | awk '{print $2}')
              if [ -n "$NEW_JAR_PATH" ]; then
                NEW_JAR=$(basename "$NEW_JAR_PATH")
                cp -f "$NEW_JAR_PATH" "./$NEW_JAR"
              else
                echo "No JAR found under $APP_DIR"
                exit 1
              fi
            fi

            # 이전 링크 백업(선택)
            if [ -L app.jar ]; then
              PREV_TARGET=$(readlink app.jar || true)
              if [ -n "$PREV_TARGET" ] && [ -f "$PREV_TARGET" ]; then
                cp -f "$PREV_TARGET" "app.jar.prev.$(date +%Y%m%d%H%M%S).jar"
              fi
            fi

            # 새 JAR로 링크 교체
            ln -sfn "$NEW_JAR" app.jar

            # 서비스 재시작
            sudo systemctl daemon-reload
            sudo systemctl restart "$SVC"

            # 헬스체크 (Actuator 권장)
            for i in {1..30}; do
              sleep 2
              if curl -fsS http://127.0.0.1:8080/actuator/health | grep -q '"status":"UP"'; then
                echo "Health OK"
                exit 0
              fi
            done

            echo "Health check failed. Rolling back..."
            PREV=$(ls -1t app.jar.prev.*.jar 2>/dev/null | head -n1 || true)
            if [ -n "$PREV" ]; then
              ln -sfn "$PREV" app.jar
              sudo systemctl restart "$SVC"
              exit 1
            else
              echo "No prev jar to roll back."
              exit 1
            fi
